version: "3.8"

services:
  nginx:
    restart: unless-stopped
    container_name: ${PROJECT}_nginx
    build:
      context: ./.docker/context
      dockerfile: images/nginx/Dockerfile
      args:
        PHP_FPM_SERVICE_NAME: php-fpm
    ports:
      - ${NETWORK}:${NGINX_PORT}:80
    volumes:
      - ./:/var/www
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - php-fpm
    networks:
      - main-network

  php-fpm:
    restart: unless-stopped
    container_name: ${PROJECT}_php-fpm
    ports:
      - ${NETWORK}:9000:9000
    build:
      context: ./.docker/context
      dockerfile: images/php-fpm/dev/Dockerfile
      args:
        - USER_ID
        - GROUP_ID
    env_file:
      - .env
    volumes:
      - ./:/var/www
    working_dir: /var/www/
    depends_on:
      - postgres
    networks:
      - main-network


  postgres:
    restart: unless-stopped
    container_name: ${PROJECT}_postgres
    build:
      context: ./.docker/context
      dockerfile: images/postgres/Dockerfile
    volumes:
      - ./.docker/data/postgres:/var/lib/postgresql/data
      - ./.docker/conf/postgres/initdb:/docker-entrypoint-initdb.d
    ports:
      - ${NETWORK}:${DB_PORT}:5432
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    networks:
      - main-network

  redis:
    image: "redis:alpine"
    container_name: ${PROJECT}_redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - ${NETWORK}:${REDIS_PORT}:6379
    environment:
      - REDIS_REPLICATION_MODE=master
    networks:
      - main-network

networks:
  main-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${DOCKER_NETWORK}
